let currentQuestionIndex = 0;
let selectedAnswer = null;
let score = 0;
let correctCount = 0;
let wrongCount = 0;

let correctSound = new Audio("correct.mp3");
let wrongSound = new Audio("wrong.mp3");

let userAnswers = []; // ржЖржЧрзЗрж░ ржЙрждрзНрждрж░ржЧрзБрж▓рзЛ рж╕ржВрж░ржХрзНрж╖ржгрзЗрж░ ржЬржирзНржп
let shuffledOptionsPerQuestion = []; // ржкрзНрж░рждрж┐ржЯрж┐ ржкрзНрж░рж╢рзНржирзЗрж░ ржЬржирзНржп рж╢рж╛ржлрзЗрж▓ржб ржЕржкрж╢ржи рж╕ржВрж░ржХрзНрж╖ржг

// ржкрзНрж░рж╢рзНржи ржжрзЗржЦрж╛ржирзЛрж░ ржлрж╛ржВрж╢ржи (рж╢рж╛ржлрзЗрж▓рж┐ржВрж╕рж╣)
function shuffleArray(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
}

function showQuestion() {
  const container = document.getElementById("quiz-container");
  const q = quizSet.questions[currentQuestionIndex];

  let shuffledOptions = [...q.options];
  shuffleArray(shuffledOptions);
  // ржкрзНрж░рж╢рзНржирзЗрж░ ржЬржирзНржп рж╢рж╛ржлрзЗрж▓ржб ржЕржкрж╢ржи рж╕ржВрж░ржХрзНрж╖ржг
  shuffledOptionsPerQuestion[currentQuestionIndex] = shuffledOptions;

  const correctAnswerIndex = shuffledOptions.indexOf(q.options[q.answer]);

  container.innerHTML = `
    <div class="mb-4">
      <h2 class="text-lg font-semibold text-gray-800 mb-3">
        ржкрзНрж░рж╢рзНржи ${currentQuestionIndex + 1}: ${q.question}
      </h2>
      <div class="grid grid-cols-2 gap-3">
        ${shuffledOptions
          .map(
            (opt, i) => `
          <button class="option-btn px-4 py-3 border border-gray-300 rounded bg-white hover:bg-blue-100 transition text-sm"
                  onclick="selectAnswer(${i})" data-index="${i}">
            <span class="font-bold mr-2 text-blue-600">${i + 1}.</span> ${opt}
          </button>
        `,
          )
          .join("")}
      </div>
    </div>
    <button id="nextBtn" onclick="nextQuestion()" class="mt-4 w-full py-2 bg-blue-600 text-white rounded disabled:opacity-50" disabled>
      ржкрж░ржмрж░рзНрждрзА ржкрзНрж░рж╢рзНржи (Enter)
    </button>
  `;

  // selectAnswer ржлрж╛ржВрж╢ржи ржУржнрж╛рж░рж░рж╛ржЗржб (рж╢рж╛ржлрзЗрж▓рзНржб ржЕржкрж╢ржи ржЕржирзБржпрж╛рзЯрзА)
  window.selectAnswer = function (index) {
    if (selectedAnswer !== null) return;

    selectedAnswer = index;

    document.querySelectorAll(".option-btn").forEach((btn) => {
      btn.disabled = true;
      btn.classList.add("bg-gray-100");
    });

    const correctBtn = document.querySelector(
      `[data-index="${correctAnswerIndex}"]`,
    );
    correctBtn.classList.remove("bg-gray-100");
    correctBtn.classList.add("bg-green-500", "text-white");

    if (index !== correctAnswerIndex) {
      const wrongBtn = document.querySelector(`[data-index="${index}"]`);
      wrongBtn.classList.remove("bg-gray-100");
      wrongBtn.classList.add("bg-red-500", "text-white");
      wrongCount++;

      wrongSound.play();
    } else {
      score++;
      correctCount++;
      correctSound.play();
    }

    // ржПржЦрж╛ржирзЗ ржЗржиржбрзЗржХрзНрж╕ рж╕рзЗржн ржХрж░рзЛ (рж╢рж╛ржлрзЗрж▓ржб ржЕржкрж╢ржирзЗрж░ ржЗржиржбрзЗржХрзНрж╕)
    userAnswers[currentQuestionIndex] = index;

    document.getElementById("correct-count").textContent = `тЬФя╕П ${correctCount}`;
    document.getElementById("wrong-count").textContent = `тЭМ ${wrongCount}`;
    document.getElementById("nextBtn").disabled = false;
  };
}

// ржкрж░ржмрж░рзНрждрзА ржкрзНрж░рж╢рзНржи
function nextQuestion() {
  if (selectedAnswer === null) return;

  currentQuestionIndex++;
  selectedAnswer = null;

  if (currentQuestionIndex < quizSet.questions.length) {
    showQuestion();
  } else {
    showFinalResult();
  }
}

// ржХрзБржЗржЬ рж╢рзЗрж╖ рж╣рж▓рзЗ ржлрж▓рж╛ржлрж▓ ржжрзЗржЦрж╛ржирзЛ
function showFinalResult() {
  const container = document.getElementById("quiz-container");
  container.innerHTML = `
      <div class="text-center space-y-4">
        <h2 class="text-xl font-bold text-green-700">ЁЯОЙ ржХрзБржЗржЬ рж╢рзЗрж╖!</h2>
        <p class="text-lg text-gray-800">рж╕ржарж┐ржХржГ ${correctCount}, ржнрзБрж▓ржГ ${wrongCount}</p>
        <button onclick="showReview()" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">рж░рж┐ржнрж┐ржЙ ржжрзЗржЦрзБржи</button>
        <button onclick="saveScore()" class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700">рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржбрзЗ ржпрзЛржЧ ржХрж░рзБржи</button>
        <button onclick="location.reload()" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">ЁЯФБ ржЖржмрж╛рж░ ржжрж┐ржи</button>
      </div>
  `;
}

// рж░рж┐ржнрж┐ржЙ ржжрзЗржЦрж╛ржирзЛрж░ ржлрж╛ржВрж╢ржи (рж╢рж╛ржлрзЗрж▓ржб ржЕржкрж╢ржи ржЕржирзБржпрж╛рзЯрзА ржлрж┐ржХрзНрж╕ржб)
function showReview() {
  const container = document.getElementById("quiz-container");
  let reviewHTML = `
    <div class="text-center space-y-4">
      <h2 class="text-xl font-bold text-blue-700">ЁЯУЪ ржХрзБржЗржЬ рж░рж┐ржнрж┐ржЙ</h2>
  `;

  for (let i = 0; i < quizSet.questions.length; i++) {
    const q = quizSet.questions[i];
    const userAnswerIndex = userAnswers[i];

    // рж╕ржВрж░ржХрзНрж╖рж┐ржд рж╢рж╛ржлрзЗрж▓ржб ржЕржкрж╢ржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи
    const shuffledOptions = shuffledOptionsPerQuestion[i];
    const correctAnswerIndex = shuffledOptions.indexOf(q.options[q.answer]);

    let isCorrect = false;
    if (userAnswerIndex !== undefined) {
      isCorrect = userAnswerIndex === correctAnswerIndex;
    }

    reviewHTML += `
      <div class="mb-4 p-4 border rounded ${
        isCorrect ? "border-green-500" : "border-red-500"
      }">
        <h3 class="text-lg font-semibold text-gray-800 mb-2">
          ржкрзНрж░рж╢рзНржи ${i + 1}: ${q.question}
        </h3>
        <p class="text-sm text-gray-700">
          рж╕ржарж┐ржХ ржЙрждрзНрждрж░: ${q.options[q.answer]}
        </p>
        <p class="text-sm text-gray-700">
          ржмрзНржпрж╛ржЦрзНржпрж╛: ${q.explanation || "ржХрзЛржирзЛ ржмрзНржпрж╛ржЦрзНржпрж╛ ржирзЗржЗ"}
        </p>
    `;

    if (userAnswerIndex !== undefined) {
      reviewHTML += `
        <p class="text-sm ${isCorrect ? "text-green-600" : "text-red-600"}">
          ржЖржкржирж╛рж░ ржЙрждрзНрждрж░: ${shuffledOptions[userAnswerIndex]} (${isCorrect ? "рж╕ржарж┐ржХ" : "ржнрзБрж▓"})
        </p>
      `;
    } else {
      reviewHTML += `<p class="text-sm text-yellow-600">ржЖржкржирж┐ ржПржЗ ржкрзНрж░рж╢рзНржирзЗрж░ ржЙрждрзНрждрж░ ржжрзЗржиржирж┐ред</p>`;
    }

    reviewHTML += `</div>`;
  }

  reviewHTML += `
      <button onclick="location.reload()" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
        ЁЯФБ ржЖржмрж╛рж░ ржжрж┐ржи
      </button>
    </div>
  `;
  container.innerHTML = reviewHTML;
}

// рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржб ржбрзЗржЯрж╛ рж▓рзЛржХрж╛рж▓ рж╕рзНржЯрзЛрж░рзЗржЬрзЗ рж╕рзЗржЗржн ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
function saveScore() {
  let name = prompt("ржЖржкржирж╛рж░ ржирж╛ржо рж▓рж┐ржЦрзБржи:");
  if (name) {
    let scoreData = { name: name, score: correctCount };
    let leaderboard = JSON.parse(localStorage.getItem('leaderboard') || '[]');
    leaderboard.push(scoreData);

    // рж╕рзНржХрзЛрж░ ржЕржирзБрж╕рж╛рж░рзЗ рж╕рж╛ржЬрж╛ржирзЛ
    leaderboard.sort((a, b) => b.score - a.score);

    // рж╕рзЗрж░рж╛ рззрзжржЯрж┐ рж╕рзНржХрзЛрж░ рж░рж╛ржЦрзБржи
    leaderboard = leaderboard.slice(0, 10);

    localStorage.setItem('leaderboard', JSON.stringify(leaderboard));
    showLeaderboard();
  }
}

// рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржб ржжрзЗржЦрж╛ржирзЛрж░ ржлрж╛ржВрж╢ржи
function showLeaderboard() {
  let leaderboard = JSON.parse(localStorage.getItem('leaderboard') || '[]');
  let leaderboardHTML = `
      <div class="text-center space-y-4">
          <h2 class="text-xl font-bold text-purple-700">ЁЯПЖ рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржб</h2>
          <ol class="list-decimal list-inside text-lg text-gray-800">
  `;

  if (leaderboard.length === 0) {
    leaderboardHTML += `<p>рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржбрзЗ ржПржЦржирзЛ ржХрзЗржЙ ржирзЗржЗ!</p>`;
  } else {
    leaderboard.forEach((item, index) => {
      leaderboardHTML += `<li>${item.name} - ${item.score}</li>`;
    });
  }

  leaderboardHTML += `
          </ol>
          <button onclick="resetLeaderboard()" class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700">
              рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржб рж░рж┐рж╕рзЗржЯ ржХрж░рзБржи
          </button>
          <button onclick="location.reload()" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
              ЁЯФБ ржЖржмрж╛рж░ ржЦрзЗрж▓рзБржи
          </button>
      </div>
  `;

  document.getElementById("quiz-container").innerHTML = leaderboardHTML;
}

// рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржб рж░рж┐рж╕рзЗржЯ ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
function resetLeaderboard() {
  localStorage.removeItem('leaderboard');
  showLeaderboard();
}

// ржХрзАржмрзЛрж░рзНржб ржХржирзНржЯрзНрж░рзЛрж▓ рж╕рж╛ржкрзЛрж░рзНржЯ
function setupKeyboard() {
  document.addEventListener("keydown", function (event) {
    if (event.key === "Enter" && !document.getElementById("nextBtn").disabled) {
      nextQuestion();
    }

    if (selectedAnswer === null) {
      if (event.key >= "1" && event.key <= "4") {
        let index = parseInt(event.key) - 1;
        let buttons = document.querySelectorAll(".option-btn");
        if (index < buttons.length) {
          selectAnswer(index);
        }
      }
    }
  });
}

// DOMContentLoaded ржЗржнрзЗржирзНржЯрзЗ ржХрзБржЗржЬ рж╢рзБрж░рзБ ржПржмржВ ржкрзНрж░рж╢рзНржи рж╢рж╛ржлрзЗрж▓ ржХрж░рж╛
document.addEventListener("DOMContentLoaded", () => {
  if (typeof quizSet !== "undefined") {
    document.getElementById("quiz-title").textContent = quizSet.name;

    shuffleArray(quizSet.questions);

    showQuestion();
    setupKeyboard();

    // ржерж┐ржо рж╕рзЗржЯржЖржк (ржпржжрж┐ ржерж╛ржХрзЗ, ржЖржЧрзЗрж░ ржорждрзЛржЗ рж░рж╛ржЦрзБржи)
  } else {
    document.getElementById("quiz-container").innerHTML =
      "<p class='text-red-600'>ржкрзНрж░рж╢рзНржи рж▓рзЛржб рж╣рзЯржирж┐ред</p>";
  }
});
